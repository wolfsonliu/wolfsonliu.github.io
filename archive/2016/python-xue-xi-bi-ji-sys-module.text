Title: Python 学习笔记: sys module
Date: 2016-09-10 12:49
Modified: 2016-09-10 12:49
Category: 壹零零壹
Tags: python
Authors: Wolfson Liu
Summary: sys module.

sys 是 Python 的核心包之一, 其中的函数或变量主要是和 python 本身有关的东西, 如版本号等, 它试图是平台独立的, 每个平台下都有同样的函数来完成相同的事情, 不过也有平台特异的函数.

## 变量 ##

* sys.platform: 返回 Python 安装在什么操作系统上, 如果是 linux 则返回 "linux".
* sys.version: 返回安装的 Python 版本号, 如 "3.5.1 (default, Aug  9 2016, 15:35:51) \n[GCC 6.1.1 20160621 (Red Hat 6.1.1-3)]".
* sys.version_info: 也会返回类似 sys.version 的 Python 的版本信息.
* sys.copyright: 返回版权信息.
* sys.path: 返回 Python 的默认搜索路径, 其值默认是和 shell 下的 PYTHONPATH 一致的. sys.path 可以被改变, 从而影响到当前运行情况, 但是改变的 sys.path 并不会被保存, 下次运行 Python, 将会把 sys.path 重新设置为 PYTHONPATH.
* sys.modules: 加载的 module 的 dictionary.

### 标准输入输出 ###

在 sys 中定义了操作系统独立的输入输出, 类似于 C 语言 stdlib 中的 stdin, stdout 和 stderr. 使用这三个输入输出的脚本可以在 bash 下配合 bash 对输入输出的操作使用.

* sys.stdin: 标准输入, 在命令行输入. ```<_io.TextIOWrapper name='<stdin>' mode='r' encoding='UTF-8'>```
* sys.stdout: 标准输出, 在命令行输出. ```<_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>```
* sys.stderr: 标准错误输出, 在命令行输出. ```<_io.TextIOWrapper name='<stderr>' mode='w' encoding='UTF-8'>```

## 函数 ##

* sys.exit: 退出函数, 可以返回一个 flag.



