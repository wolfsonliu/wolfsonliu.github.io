Title: Python 学习笔记: virtual environment
Date: 2016-05-24 12:32
Modified: 2017-08-23 15:29
Category: 壹零零壹
Tags: python
Authors: Wolfson Liu
Summary: 使用 virtualenv 和 conda 来管理 virtual environment


## virturalenv ##

有些 python 的包之间的相互依赖程度不一样, 有可能我所需要使用的一个包依
赖于某个特定的包的一个版本, 而我所需要用的另一个包依赖于某个特定的包的
另一个版本, 这样的情况下如果都是用 pip 来安装 python 包, 可能就使得依
赖不合适. 所以, 我需要使得每个包都有自己独立的依赖环境, 每个包可以有一
个自己的虚拟环境, 即 virtualenv. 下面主要提及的是在 Linux 下面的操作,
可以使用 virtualenv 或者 virtualenv-3 创建 python2.7 或者 python3 环境.

### 创建环境 ###

首先, 要建立一个文件夹, 用于保存一个独立的 python 环境. 比如说建立一个文件夹叫作 ENV.

```
$ mkdir ENV
```

然后在该文件夹起始一个独立的环境.

```
$ virtualenv ENV
New python executable in ENV/bin/python
Installing setuptools, pip, wheel...done.
```

可以看到在 ENV 文件夹下面创建了所必须的文件夹和文件或者文件链接.
* bin: 用于保存独立环境下面的可执行文件, 其中有 activate 等启动镜像环
  境所需要的脚本和 python 的链接等.
* include: 用于保存独立环境下面所需要的头文件, 最开始只有一个文件夹
  python2.7 是 python2.7 所需要的头文件所在的文件夹.
* lib: 用于保存 python 相关的包.
* lib64: 用于保存 64 位的 python 相关的包.

### 激活环境 ###

在 Linux 的终端下去激活环境需要运行下面的脚本, 其会改变一些环境变量.

```
$ source ENV/bin/activate
(ENV)$
```

当环境激活之后, $PATH 的第一个路径就会变成 ENV/bin 的绝对路径. 而提示
符参数 $PS1 的前面会加上 "(ENV)". 如果直接从 ENV/bin 去运行程序, 则不
使用 activate 脚本去修改也可以.

### 关闭环境 ###

如果想要把更改过的变量复原, 则使用 deactivate 命令.

```
(ENV)$ deactivate
$
```

### 移除环境 ###

想要移除环境只需要将环境所在的文件夹删除.

```
(ENV)$ deactivate
$ rm -r /path/to/ENV
```

### 参数设置 ###

如果想要添加别的搜索路径到一个环境中, 可以设置参数
`--extra-search-dir`.

```{shell}
$ virtualenv --extra-search-dir=/path/to/other/dir ENV
```


## Conda ##

除了 virtualenv 包外, 如果使用 [Anaconda]{https://www.continuum.io }
Python 发行版,其中有 conda 作为 virtual environment 管理软件.


### 创建环境 ###

创建环境可以使用下面的命令创建环境.

```{shell}
$ conda create -n envname python=x.x anaconda
```

`conda` 是 anaconda 管理软件的名称, `create` 说明创建环境.
`-n envname` 指定要创建的环境的名称为 envname.
`python=x.x` 指定环境中需要的 Python 的版本号.
`anaconda` 指定该环境中需要安装的包, 可以有多个,
例如如果是 `pandas scipy sympy` 则指定环境建立的时候安装这三个包,
也可以在环境建立完成后再另外安装所需要的包和软件.

### 激活环境 ###

conda 环境的激活命令和 virtualenv 相似却不同. 主要是因为 conda 的
active 脚本的定义不同.

```{shell}
$ source activate envname
```

### 关闭环境 ###

conda 环境的关闭也需要使用 source 命令

```{shell}
$ source deactivate
```

### 移除环境 ###

```{shell}
$ conda remove --name envname --all
```

然后可以使用 `conda info --env` 来查看剩下的环境.


## Conda 使用简介 ##

conda 命令是 anaconda 中带有的管理应用, 环境和包的软件, 功能比
virtualenv要全面和强大的多。

* `conda help`: 显示conda命令的帮助文档.
* `conda info`: 显示当前 anaconda 安装的情况, 包括系统, python 版本,
  默认下载地址, 各种默认地址等.
* `conda list`: 列出一个 conda 环境中的包.
* `conda search`: 搜索 python 包并显示相应的信息.
* `conda create`: 创建 conda 环境.
* `conda install`: 安装软件包.
* `conda update`: 更新软件包.
* `conda upgrade`: 更新软件包, 同 `update`.
* `conda remove`: 删除软件包.
* `conda uninstall`: 删除软件包, 同 `uninstall`.
* `conda config`: 配制 conda 环境, 修改 .condarc 文件.
* `conda clean`: 删除没用的包或者缓存.

### conda info 环境与包的信息 ###

`conda info` 可以用来显示当前

```{r}
conda info

#                platform : linux-64
#           conda version : 4.3.34
#        conda is private : False
#       conda-env version : 4.3.34
#     conda-build version : not installed
#          python version : 3.6.1.final.0
#        requests version : 2.18.4
#        root environment : /gpfs/share/software/anaconda3  (read only)
#     default environment : /gpfs/share/software/anaconda3
#        envs directories : /gpfs/share/home/1501111485/.conda/envs
#                           /gpfs/share/software/anaconda3/envs
#           package cache : /gpfs/share/software/anaconda3/pkgs
#                           /gpfs/share/home/1501111485/.conda/pkgs
#            channel URLs : https://repo.continuum.io/pkgs/main/linux-64
#                           https://repo.continuum.io/pkgs/main/noarch
#                           https://repo.continuum.io/pkgs/free/linux-64
#                           https://repo.continuum.io/pkgs/free/noarch
#                           https://repo.continuum.io/pkgs/r/linux-64
#                           https://repo.continuum.io/pkgs/r/noarch
#                           https://repo.continuum.io/pkgs/pro/linux-64
#                           https://repo.continuum.io/pkgs/pro/noarch
#             config file : None
#              netrc file : None
#            offline mode : False
#              user-agent : conda/4.3.34 requests/2.18.4 CPython/3.6.1 Linux/3.10.0-514.el7.x86_64 Red Hat Enterprise Linux Server/7.3 glibc/2.17    
#                 UID:GID : 66237:66338
```
